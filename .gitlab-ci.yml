variables:
  MEDIA_FEATURE_DEPENDENCIES: "clang libavutil-dev libavdevice-dev libavfilter-dev libavformat-dev libavresample-dev libpostproc-dev libswresample-dev ffmpeg"


stages:
  - test
  - publish
  - benchmark

include:
  - project: 'media-cloud-ai/ci/pipelines'
    file: '/rust/rust-publish-docker.yml'
  - project: 'media-cloud-ai/ci/pipelines'
    file: '/rust/rust-base.yml'

build:test:
  stage: test
  script: cargo test

build:format:
  stage: test
  script: cargo fmt -- --check

build:clippy:
  stage: test
  before_script:
    - apt-get update -q && apt-get install ${MEDIA_FEATURE_DEPENDENCIES} -y
  script: cargo clippy --all-targets --all-features -- -D warnings

build:coverage:
  stage: test
  before_script:
    - apt-get update -q && apt-get install ${MEDIA_FEATURE_DEPENDENCIES} -y
  script: cargo tarpaulin --avoid-cfg-tarpaulin --out Xml --all-features
  after_script:
    - apt-get install -y curl
    - bash <(curl -s https://codecov.io/bash)
  coverage: '/^\d+.\d+% coverage/'

publish:registry:probe:
  stage: publish
  image: docker
  services:
    - docker:dind
  before_script:
    - docker info
    - apk add --no-cache git make cargo
  script:
    - if [ ! -f Cargo.lock ]; then cargo generate-lockfile; fi
    - export VERSION=`cargo pkgid | cut -d# -f2 | cut -d':' -f2`
    - if [ "$VERSION" != "$CI_COMMIT_TAG" ]; then exit -1; fi
    - export IMAGE_TAG=`git describe --always --tags --first-parent`-probe
    - docker build -t $CONTAINER_REGISTRY/$CONTAINER_IMAGE_NAME:$IMAGE_TAG -f Dockerfile.probe .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CONTAINER_REGISTRY
    - docker push $CONTAINER_REGISTRY/$CONTAINER_IMAGE_NAME:$IMAGE_TAG
    - echo $CONTAINER_REGISTRY/$CONTAINER_IMAGE_NAME:$IMAGE_TAG
  only:
    - tags


benchmark:
  stage: benchmark
  image: docker/compose:latest
  services:
    - docker:dind
  before_script:
    - docker info
    - docker-compose version
  script:
    - docker build -t transfer_worker_benches -f ./benches/Dockerfile .
    - docker-compose up -d
    - docker run --rm transfer_worker_benches
    - docker-compose down
  only:
    - tags
